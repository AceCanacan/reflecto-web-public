{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/Developer/medchat-web/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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';\nfunction ChatPage({\n  location\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const {\n    state = {}\n  } = location || {};\n  const {\n    symptoms,\n    duration,\n    patterns,\n    medications\n  } = state;\n  const navigate = useNavigate();\n  const goToOutputPage = () => {\n    navigate('/outputpage', {\n      state: {\n        messages\n      }\n    }); // navigate to OutputPage with messages as state\n  };\n\n  const sendBotMessage = content => {\n    const botMessage = {\n      role: 'assistant',\n      content\n    };\n    setMessages(prevMessages => [...prevMessages, botMessage]);\n  };\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      role: 'user',\n      content: userInput\n    };\n    // If needed, modify the systemMessage content as per your needs.\n    const systemMessage = {\n      role: 'assistant',\n      content: `Symptoms: ${symptoms}. Duration of symptoms: ${duration}. Patterns of symptoms: ${patterns}. Symptoms: ${medications}`\n    };\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [...messages, systemMessage, userMessage]\n      }, {\n        headers: {\n          'Authorization': `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const botMessage = {\n        role: 'system',\n        content: response.data.choices[0].message.content.trim()\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage, botMessage]);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error response from OpenAI:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n    setUserInput('');\n    setLoading(false);\n  };\n  useEffect(() => {\n    sendBotMessage(\"Hello! How are you feeling today?\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading || !userInput.trim(),\n        children: loading ? 'Loading...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToOutputPage,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"m/kmAc8oN9fy7aA59S0r3tLevnI=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","jsxDEV","_jsxDEV","API_URL","API_KEY","ChatPage","location","_s","loading","setLoading","userInput","setUserInput","messages","setMessages","state","symptoms","duration","patterns","medications","navigate","goToOutputPage","sendBotMessage","content","botMessage","role","prevMessages","sendMessage","trim","userMessage","systemMessage","response","post","model","headers","data","choices","message","error","_error$response","console","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/acecanacan/Developer/medchat-web/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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';\n\nfunction ChatPage({ location }) {\n  const [loading, setLoading] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const { state = {} } = location || {};\n  const { symptoms, duration, patterns, medications } = state;\n  \n  const navigate = useNavigate();\n\n  const goToOutputPage = () => {\n    navigate('/outputpage', { state: { messages } }); // navigate to OutputPage with messages as state\n  };\n\n  const sendBotMessage = (content) => {\n    const botMessage = { role: 'assistant', content };\n    setMessages((prevMessages) => [...prevMessages, botMessage]);\n  };\n\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n\n    const userMessage = { role: 'user', content: userInput };\n    // If needed, modify the systemMessage content as per your needs.\n    const systemMessage = {\n      role: 'assistant',\n      content: `Symptoms: ${symptoms}. Duration of symptoms: ${duration}. Patterns of symptoms: ${patterns}. Symptoms: ${medications}`,\n    };\n\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [...messages, systemMessage, userMessage],\n      }, {\n        headers: {\n          'Authorization': `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const botMessage = { role: 'system', content: response.data.choices[0].message.content.trim() };\n      setMessages((prevMessages) => [...prevMessages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error response from OpenAI:\", error.response?.data);\n    }\n\n    setUserInput('');\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    sendBotMessage(\"Hello! How are you feeling today?\");\n  }, []);\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.role}`}>\n            <span>{message.content}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          disabled={loading}\n        />\n        <button onClick={sendMessage} disabled={loading || !userInput.trim()}>\n          {loading ? 'Loading...' : 'Send'}\n        </button>\n      </div>\n      <button onClick={goToOutputPage}>Submit</button> {/* Added Submit Button */}\n    </div>\n  );\n}\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}