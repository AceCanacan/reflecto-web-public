{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/Developer/medchat-web/src/pages/OutputPage.js\",\n  _s = $RefreshSig$();\n// OutputPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport './OutputPage.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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';\nconst OutputPage = ({\n  messages\n}) => {\n  _s();\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  const [summary, setSummary] = useState({\n    date: '',\n    content: ''\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getSummary = async () => {\n      try {\n        setLoading(true);\n        const userMessages = state.messages.filter(message => message.role !== 'system');\n        const response = await axios.post(API_URL, {\n          model: 'gpt-3.5-turbo',\n          messages: [...userMessages, {\n            role: 'user',\n            content: `Your AI message content here...`\n          }]\n        }, {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const fetchedSummary = {\n          date: new Date().toISOString(),\n          content: response.data.choices[0].message.content.trim()\n        };\n        setSummary(fetchedSummary);\n        setLoading(false);\n      } catch (error) {\n        var _error$response;\n        console.error('Error response from OpenAI:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        setLoading(false);\n      }\n    };\n    if (state && state.messages) getSummary();\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputBox\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"summaryText\",\n        children: summary.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(OutputPage, \"P6fOFa8Giw7j2z3rCAfSZTkKV+w=\", false, function () {\n  return [useLocation];\n});\n_c = OutputPage;\nexport default OutputPage;\nvar _c;\n$RefreshReg$(_c, \"OutputPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","API_URL","API_KEY","OutputPage","messages","_s","location","state","summary","setSummary","date","content","loading","setLoading","getSummary","userMessages","filter","message","role","response","post","model","headers","Authorization","fetchedSummary","Date","toISOString","data","choices","trim","error","_error$response","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/acecanacan/Developer/medchat-web/src/pages/OutputPage.js"],"sourcesContent":["// OutputPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport './OutputPage.css'; // Import the CSS file\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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';\n\nconst OutputPage = ({ messages }) => {\n  const location = useLocation();\n  const { state } = location;\n\n  const [summary, setSummary] = useState({ date: '', content: '' });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getSummary = async () => {\n      try {\n        setLoading(true);\n        const userMessages = state.messages.filter((message) => message.role !== 'system');\n\n        const response = await axios.post(\n          API_URL,\n          {\n            model: 'gpt-3.5-turbo',\n            messages: [\n              ...userMessages,\n              {\n                role: 'user',\n                content: `Your AI message content here...`,\n              },\n            ],\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${API_KEY}`,\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n\n        const fetchedSummary = {\n          date: new Date().toISOString(),\n          content: response.data.choices[0].message.content.trim(),\n        };\n        setSummary(fetchedSummary);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error response from OpenAI:', error.response?.data);\n        setLoading(false);\n      }\n    };\n\n    if (state && state.messages) getSummary();\n  }, [state]);\n\n  return (\n    <div className=\"container\">\n      {loading ? (\n        <div className=\"loader\">Loading...</div>\n      ) : (\n        <div className=\"outputBox\">\n          <p className=\"summaryText\">{summary.content}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OutputPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,OAAO,GAAG,4CAA4C;AAC5D,MAAMC,OAAO,GAAG,qDAAqD;AAErE,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAM,CAAC,GAAGD,QAAQ;EAE1B,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC;IAAEe,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFD,UAAU,CAAC,IAAI,CAAC;QAChB,MAAME,YAAY,GAAGR,KAAK,CAACH,QAAQ,CAACY,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,QAAQ,CAAC;QAElF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAC/BnB,OAAO,EACP;UACEoB,KAAK,EAAE,eAAe;UACtBjB,QAAQ,EAAE,CACR,GAAGW,YAAY,EACf;YACEG,IAAI,EAAE,MAAM;YACZP,OAAO,EAAG;UACZ,CAAC;QAEL,CAAC,EACD;UACEW,OAAO,EAAE;YACPC,aAAa,EAAG,UAASrB,OAAQ,EAAC;YAClC,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QAED,MAAMsB,cAAc,GAAG;UACrBd,IAAI,EAAE,IAAIe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UAC9Bf,OAAO,EAAEQ,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACX,OAAO,CAACN,OAAO,CAACkB,IAAI,CAAC;QACzD,CAAC;QACDpB,UAAU,CAACe,cAAc,CAAC;QAC1BX,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOiB,KAAK,EAAE;QAAA,IAAAC,eAAA;QACdC,OAAO,CAACF,KAAK,CAAC,6BAA6B,GAAAC,eAAA,GAAED,KAAK,CAACX,QAAQ,cAAAY,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI,CAAC;QAClEd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIN,KAAK,IAAIA,KAAK,CAACH,QAAQ,EAAEU,UAAU,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,oBACEP,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBtB,OAAO,gBACNZ,OAAA;MAAKiC,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAExCtC,OAAA;MAAKiC,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBlC,OAAA;QAAGiC,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAE1B,OAAO,CAACG;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CA3DIF,UAAU;EAAA,QACGL,WAAW;AAAA;AAAAyC,EAAA,GADxBpC,UAAU;AA6DhB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}