{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/Developer/JurisAI-web/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../pages-css/ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = \"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\";\nfunction ChatPage({\n  location\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const {\n    state = {}\n  } = location || {};\n  const {\n    symptoms,\n    duration,\n    patterns,\n    medications\n  } = state;\n  const inputRef = useRef(null);\n  const navigate = useNavigate();\n  const goToOutputPage = () => {\n    navigate('/outputpage', {\n      state: {\n        messages\n      }\n    }); // navigate to OutputPage with messages as state\n  };\n\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      role: 'user',\n      content: userInput\n    };\n    const systemMessage = {\n      role: 'assistant',\n      content: ` Given this context ${context}${background} ${conditions}${expectations} You are a seasoned guidance counselor with a unique ability to perfectly comprehend the thoughts and emotions of the individuals seeking your services. \n      Your approach combines empathy, assurance, and introspective techniques, including asking carefully crafted follow-up questions to help people understand themselves better. \n        With a background in psychotherapy, you don’t only provide support in layman’s terms but also include technical and logical context to help your clients grasp what they’re going through. \n        This method has proven highly effective in assisting those who come to you for guidance. \n        When someone approaches you with a question or concern, your response always begins with an affirmation to make them feel understood, followed by a thought-provoking follow-up question \n        that guides them deeper into self-awareness and discovery.`\n    };\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [...messages, systemMessage, userMessage]\n      }, {\n        headers: {\n          'Authorization': `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const botMessage = {\n        role: 'system',\n        content: response.data.choices[0].message.content.trim()\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage, botMessage]);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error response from OpenAI:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n    setUserInput('');\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container-chatpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.role === 'user' ? 'user-message' : 'bot-message',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: loading,\n        className: \"user-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading || !userInput.trim(),\n        className: loading || !userInput.trim() ? 'send-button-disabled' : 'send-button',\n        children: loading ? '➤' : '➤'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToOutputPage,\n      className: \"submit-button\",\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"rChdovIDzUViuEvXl5iDHXPM/2w=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","jsxDEV","_jsxDEV","API_URL","API_KEY","ChatPage","location","_s","loading","setLoading","userInput","setUserInput","messages","setMessages","state","symptoms","duration","patterns","medications","inputRef","navigate","goToOutputPage","sendMessage","trim","userMessage","role","content","systemMessage","context","background","conditions","expectations","response","post","model","headers","botMessage","data","choices","message","prevMessages","error","_error$response","console","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/acecanacan/Developer/JurisAI-web/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../pages-css/ChatPage.css';\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = \"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\";\n\n\nfunction ChatPage({ location }) {\n  const [loading, setLoading] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const { state = {} } = location || {};\n  const { symptoms, duration, patterns, medications } = state;\n\n  const inputRef = useRef(null);\n  const navigate = useNavigate();\n\n  const goToOutputPage = () => {\n    navigate('/outputpage', { state: { messages } }); // navigate to OutputPage with messages as state\n  };  \n\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n\n    const userMessage = { role: 'user', content: userInput };\n    const systemMessage = {\n      role: 'assistant',\n      content: ` Given this context ${context }${background } ${conditions }${expectations } You are a seasoned guidance counselor with a unique ability to perfectly comprehend the thoughts and emotions of the individuals seeking your services. \n      Your approach combines empathy, assurance, and introspective techniques, including asking carefully crafted follow-up questions to help people understand themselves better. \n        With a background in psychotherapy, you don’t only provide support in layman’s terms but also include technical and logical context to help your clients grasp what they’re going through. \n        This method has proven highly effective in assisting those who come to you for guidance. \n        When someone approaches you with a question or concern, your response always begins with an affirmation to make them feel understood, followed by a thought-provoking follow-up question \n        that guides them deeper into self-awareness and discovery.`,\n        };\n\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [...messages, systemMessage, userMessage],\n      }, {\n        headers: {\n          'Authorization': `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const botMessage = { role: 'system', content: response.data.choices[0].message.content.trim() };\n      setMessages((prevMessages) => [...prevMessages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error response from OpenAI:\", error.response?.data);\n    }\n\n    setUserInput('');\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"main-container-chatpage\">\n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div \n            key={index} \n            className={message.role === 'user' ? 'user-message' : 'bot-message'}\n          >\n            <span>{message.content}</span>\n          </div>\n        ))}\n      </div>\n      \n        <div className=\"input-container-chat\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            disabled={loading}\n            className=\"user-input\"\n          />\n          <button \n            onClick={sendMessage} \n            disabled={loading || !userInput.trim()}\n            className={loading || !userInput.trim() ? 'send-button-disabled' : 'send-button'}\n          >\n            {loading ? '➤' : '➤'}\n          </button>\n        </div>\n       \n\n      <button onClick={goToOutputPage} className=\"submit-button\">\n          Generate\n        </button>\n    </div>\n  );\n  \n}\n\nexport default ChatPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}