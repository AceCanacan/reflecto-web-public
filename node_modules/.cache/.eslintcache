[{"/Users/acecanacan/Developer/medchat-web/src/index.js":"1","/Users/acecanacan/Developer/medchat-web/src/App.js":"2","/Users/acecanacan/Developer/medchat-web/src/reportWebVitals.js":"3","/Users/acecanacan/Developer/medchat-web/src/pages/input.js":"4","/Users/acecanacan/Developer/medchat-web/src/pages/Home.js":"5","/Users/acecanacan/Developer/medchat-web/src/pages/ChatPage.js":"6","/Users/acecanacan/Developer/medchat-web/src/pages/OutputPage.js":"7","/Users/acecanacan/Developer/medchat-web copy/src/index.js":"8","/Users/acecanacan/Developer/medchat-web copy/src/App.js":"9","/Users/acecanacan/Developer/medchat-web copy/src/reportWebVitals.js":"10","/Users/acecanacan/Developer/medchat-web copy/src/pages/OutputPage.js":"11","/Users/acecanacan/Developer/medchat-web copy/src/pages/ChatPage.js":"12","/Users/acecanacan/Developer/medchat-web copy/src/pages/Home.js":"13","/Users/acecanacan/Developer/medchat-web copy/src/pages/input.js":"14","/Users/acecanacan/Developer/JurisAI-web/src/index.js":"15","/Users/acecanacan/Developer/JurisAI-web/src/App.js":"16","/Users/acecanacan/Developer/JurisAI-web/src/reportWebVitals.js":"17","/Users/acecanacan/Developer/JurisAI-web/src/pages/ChatPage.js":"18","/Users/acecanacan/Developer/JurisAI-web/src/pages/Home.js":"19","/Users/acecanacan/Developer/JurisAI-web/src/pages/OutputPage.js":"20","/Users/acecanacan/Developer/JurisAI-web/src/pages/input.js":"21"},{"size":535,"mtime":1695788154395,"results":"22","hashOfConfig":"23"},{"size":1102,"mtime":1695799825403,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1695788154396,"results":"25","hashOfConfig":"23"},{"size":2291,"mtime":1695798759785,"results":"26","hashOfConfig":"23"},{"size":763,"mtime":1695795960697,"results":"27","hashOfConfig":"23"},{"size":4545,"mtime":1695805891937,"results":"28","hashOfConfig":"23"},{"size":3967,"mtime":1695805889465,"results":"29","hashOfConfig":"23"},{"size":535,"mtime":1695788154395,"results":"30","hashOfConfig":"31"},{"size":1067,"mtime":1695813628862,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1695788154396,"results":"33","hashOfConfig":"31"},{"size":4079,"mtime":1695813886901,"results":"34","hashOfConfig":"31"},{"size":4301,"mtime":1695813628863,"results":"35","hashOfConfig":"31"},{"size":659,"mtime":1695813628863,"results":"36","hashOfConfig":"31"},{"size":2345,"mtime":1695813628863,"results":"37","hashOfConfig":"31"},{"size":535,"mtime":1695788154395,"results":"38","hashOfConfig":"39"},{"size":1067,"mtime":1695813628862,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1695788154396,"results":"41","hashOfConfig":"39"},{"size":3799,"mtime":1695824433512,"results":"42","hashOfConfig":"39"},{"size":658,"mtime":1695826677983,"results":"43","hashOfConfig":"39"},{"size":3065,"mtime":1695826398405,"results":"44","hashOfConfig":"39"},{"size":2262,"mtime":1695823883681,"results":"45","hashOfConfig":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1s34u6n",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aygh6o",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"8qqwmo",{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"96"},"/Users/acecanacan/Developer/medchat-web/src/index.js",[],[],["117"],"/Users/acecanacan/Developer/medchat-web/src/App.js",[],[],"/Users/acecanacan/Developer/medchat-web/src/reportWebVitals.js",[],[],"/Users/acecanacan/Developer/medchat-web/src/pages/input.js",["118"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../pages-css/Input.css';\n\nfunction CustomButton({ title, onPress, style }) {\n  return (\n    <button onClick={onPress} className={`buttonContainer ${style}`}>\n      {title}\n    </button>\n  );\n}\n\nfunction InputPage() {\n  const [symptoms, setSymptoms] = useState('');\n  const [duration, setDuration] = useState('');\n  const [patterns, setPatterns] = useState('');\n  const [medications, setMedications] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    navigate('/chatpage', { state: { symptoms, duration, patterns, medications } });\n  };\n\n  return (\n    <div className='centered-container'> {/* Apply centering styles here */}\n      <div className='input-container'>\n        <div className='textarea-wrapper'>\n        <label className='label'>Symptoms:</label>\n        <textarea \n          className='inputBox'\n          value={symptoms}\n          onChange={(e) => setSymptoms(e.target.value)}\n          placeholder='Describe in detail the primary symptom that is concerning you.'\n        />\n\n        <label className='label'>Duration:</label>\n        <textarea \n          className='inputBox'\n          value={duration}\n          onChange={(e) => setDuration(e.target.value)}\n          placeholder='How long have you been experiencing this symptom?'\n        />\n\n        <label className='label'>Patterns:</label>\n        <textarea \n          className='inputBox'\n          value={patterns}\n          onChange={(e) => setPatterns(e.target.value)}\n          placeholder='Have you noticed any patterns or triggers related to your symptoms?'\n        />\n\n        <label className='label'>Medications:</label>\n        <textarea \n          className='inputBox'\n          value={medications}\n          onChange={(e) => setMedications(e.target.value)}\n          placeholder='Have you tried any treatments or taken any new medications recently, and if so, did they affect your symptom?'\n        />\n      </div>\n      \n      <div className='button-centered-container'>\n        <CustomButton\n          title='SUBMIT'\n          onPress={handleSubmit}\n          style='submit-button-input'\n        />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InputPage;","/Users/acecanacan/Developer/medchat-web/src/pages/Home.js",[],[],"/Users/acecanacan/Developer/medchat-web/src/pages/ChatPage.js",["119","120"],[],"/Users/acecanacan/Developer/medchat-web/src/pages/OutputPage.js",[],[],"/Users/acecanacan/Developer/medchat-web copy/src/index.js",[],[],"/Users/acecanacan/Developer/medchat-web copy/src/App.js",[],[],["121"],"/Users/acecanacan/Developer/medchat-web copy/src/reportWebVitals.js",[],[],"/Users/acecanacan/Developer/medchat-web copy/src/pages/OutputPage.js",[],[],"/Users/acecanacan/Developer/medchat-web copy/src/pages/ChatPage.js",["122","123"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../pages-css/ChatPage.css';\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = \"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\";\n\n\nfunction ChatPage({ location }) {\n  const [loading, setLoading] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const { state = {} } = location || {};\n  const { situation, involved, documents, expectations } = state;\n\n  const inputRef = useRef(null);\n  const navigate = useNavigate();\n\n  const goToOutputPage = () => {\n    navigate('/outputpage', { state: { messages } }); // navigate to OutputPage with messages as state\n  };\n\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n\n    const userMessage = { role: 'user', content: userInput };\n    const systemMessage = {\n      role: 'assistant',\n      content: `${situation}. : ${involved} : ${documents}  ${expectations} This is the context about the patient\n      ChatGPT, you are an empathetic legal consultant in the Philippines so focus on Philippine Laws. Your primary role is to gain a deeper understanding of the client's situation by asking relevant questions. Your objective is not to provide advice or definitive information but to probe the circumstances and gather more details about the issue at hand.\n      Ensure you build a complete picture by clarifying any ambiguities or uncertainties in the client's responses. \n      Ask about the current status of the issue, the factors that led to the present situation, the client's thoughts and feelings, and any additional information that might be relevant to the case.\n      However, remember to respect the client's comfort and time, evaluate whether you've obtained sufficient information to understand the situation.\n      When the conversation has become extensive or you believe you've collected enough details, kindly ask the client if they have anything more they'd like to discuss or clarify. \n      I highly emphasize that you are not here to provide any legal advice to the client, you are just there to ask questions to get details about their situation.\n  \n      CHAT GPT IT IS IMPERATIVE THAT YOU DO NOT GIVE MORE THAN ONE QUESTION PER ANSWER OR MESSAGE YOU SEND.\n      DO NOT OVERWHELM THE CLIENT BY PROVIDING A BARRAGE OF QUESTIONS\n      ASK ONE QUESTION AT A TIME`,\n    };\n\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [...messages, systemMessage, userMessage],\n      }, {\n        headers: {\n          'Authorization': `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const botMessage = { role: 'system', content: response.data.choices[0].message.content.trim() };\n      setMessages((prevMessages) => [...prevMessages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error response from OpenAI:\", error.response?.data);\n    }\n\n    setUserInput('');\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"main-container-chatpage\">\n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div \n            key={index} \n            className={message.role === 'user' ? 'user-message' : 'bot-message'}\n          >\n            <span>{message.content}</span>\n          </div>\n        ))}\n      </div>\n      \n        <div className=\"input-container-chat\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            disabled={loading}\n            className=\"user-input\"\n          />\n          <button \n            onClick={sendMessage} \n            disabled={loading || !userInput.trim()}\n            className={loading || !userInput.trim() ? 'send-button-disabled' : 'send-button'}\n          >\n            {loading ? '➤' : '➤'}\n          </button>\n        </div>\n       \n\n      <button onClick={goToOutputPage} className=\"submit-button\">\n          Generate\n        </button>\n    </div>\n  );\n  \n}\n\nexport default ChatPage;","/Users/acecanacan/Developer/medchat-web copy/src/pages/Home.js",[],[],"/Users/acecanacan/Developer/medchat-web copy/src/pages/input.js",["124"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../pages-css/Input.css';\n\nfunction CustomButton({ title, onPress, style }) {\n  return (\n    <button onClick={onPress} className={`buttonContainer ${style}`}>\n      {title}\n    </button>\n  );\n}\n\nfunction InputPage() {\n  const [situation, setSituation] = useState('');\n  const [involved, setInvolved] = useState('');\n  const [documents, setDocuments] = useState('');\n  const [expectations, setExpectations] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    navigate('/chatpage', { state: { situation, involved, documents, expectations } });\n  };\n\n  return (\n    <div className='centered-container'> {/* Apply centering styles here */}\n      <div className='input-container'>\n        <div className='textarea-wrapper'>\n        <label className='label'>Situation:</label>\n        <textarea \n          className='inputBox'\n          value={situation}\n          onChange={(e) => setSituation(e.target.value)}\n          placeholder='Can you briefly describe the situation? What is its current status and how has it developed?'\n        />\n\n        <label className='label'>Involved:</label>\n        <textarea \n          className='inputBox'\n          value={involved}\n          onChange={(e) => setInvolved(e.target.value)}\n          placeholder='Who are the parties involved in this situation? Are there any potential witnesses?'\n        />\n\n        <label className='label'>Documents:</label>\n        <textarea \n          className='inputBox'\n          value={documents}\n          onChange={(e) => setDocuments(e.target.value)}\n          placeholder='What legal documents do you have related to this situation? Can you briefly describe their contents?'\n        />\n\n        <label className='label'>Expectations:</label>\n        <textarea \n          className='inputBox'\n          value={expectations}\n          onChange={(e) => setExpectations(e.target.value)}\n          placeholder='What do you hope to get out of this consultation?'\n        />\n      </div>\n      \n      <div className='button-centered-container'>\n        <CustomButton\n          title='SUBMIT'\n          onPress={handleSubmit}\n          style='submit-button-input'\n        />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InputPage;","/Users/acecanacan/Developer/JurisAI-web/src/index.js",[],[],["125"],"/Users/acecanacan/Developer/JurisAI-web/src/App.js",[],[],"/Users/acecanacan/Developer/JurisAI-web/src/reportWebVitals.js",[],[],"/Users/acecanacan/Developer/JurisAI-web/src/pages/ChatPage.js",["126"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../pages-css/ChatPage.css';\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = \"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\";\n\n\nfunction ChatPage({ location }) {\n  const [loading, setLoading] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const { state = {} } = location || {};\n  const { context, background,conditions  , expectations } = state;\n\n  const inputRef = useRef(null);\n  const navigate = useNavigate();\n\n  const goToOutputPage = () => {\n    navigate('/outputpage', { state: { messages } }); // navigate to OutputPage with messages as state\n  };  \n\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n\n    const userMessage = { role: 'user', content: userInput };\n    const systemMessage = {\n      role: 'assistant',\n      content: ` Given this context ${context }${background } ${conditions }${expectations } You are a seasoned guidance counselor with a unique ability to perfectly comprehend the thoughts and emotions of the individuals seeking your services. \n      Your approach combines empathy, assurance, and introspective techniques, including asking carefully crafted follow-up questions to help people understand themselves better. \n        With a background in psychotherapy, you don’t only provide support in layman’s terms but also include technical and logical context to help your clients grasp what they’re going through. \n        This method has proven highly effective in assisting those who come to you for guidance. \n        When someone approaches you with a question or concern, your response always begins with an affirmation to make them feel understood, followed by a thought-provoking follow-up question \n        that guides them deeper into self-awareness and discovery.`,\n        };\n\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [...messages, systemMessage, userMessage],\n      }, {\n        headers: {\n          'Authorization': `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const botMessage = { role: 'system', content: response.data.choices[0].message.content.trim() };\n      setMessages((prevMessages) => [...prevMessages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error response from OpenAI:\", error.response?.data);\n    }\n\n    setUserInput('');\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"main-container-chatpage\">\n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div \n            key={index} \n            className={message.role === 'user' ? 'user-message' : 'bot-message'}\n          >\n            <span>{message.content}</span>\n          </div>\n        ))}\n      </div>\n      \n        <div className=\"input-container-chat\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            disabled={loading}\n            className=\"user-input\"\n          />\n          <button \n            onClick={sendMessage} \n            disabled={loading || !userInput.trim()}\n            className={loading || !userInput.trim() ? 'send-button-disabled' : 'send-button'}\n          >\n            {loading ? '➤' : '➤'}\n          </button>\n        </div>\n       \n\n      <button onClick={goToOutputPage} className=\"submit-button\">\n          Generate\n        </button>\n    </div>\n  );\n  \n}\n\nexport default ChatPage;","/Users/acecanacan/Developer/JurisAI-web/src/pages/Home.js",[],[],"/Users/acecanacan/Developer/JurisAI-web/src/pages/OutputPage.js",[],[],"/Users/acecanacan/Developer/JurisAI-web/src/pages/input.js",["127"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../pages-css/Input.css';\n\nfunction CustomButton({ title, onPress, style }) {\n  return (\n    <button onClick={onPress} className={`buttonContainer ${style}`}>\n      {title}\n    </button>\n  );\n}\n\nfunction InputPage() {\n  const [context, setContext] = useState('');\n  const [background, setBackground] = useState('');\n  const [conditions, setConditions] = useState('');\n  const [expectations, setExpectations] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    navigate('/chatpage', { state: { context, background,conditions  , expectations } });\n  };\n\n  return (\n    <div className='centered-container'> {/* Apply centering styles here */}\n      <div className='input-container'>\n        <div className='textarea-wrapper'>\n        <label className='label'>Context:</label>\n        <textarea \n          className='inputBox'\n          value={context}\n          onChange={(e) => setContext(e.target.value)}\n          placeholder='Can you briefly describe the situation? What is its current status and how has it developed?'\n        />\n\n        <label className='label'>Background:</label>\n        <textarea \n          className='inputBox'\n          value={background}\n          onChange={(e) => setBackground(e.target.value)}\n          placeholder='Can you provide a little background of yourself?'\n        />\n\n        <label className='label'>Conditions:</label>\n        <textarea \n          className='inputBox'\n          value={conditions}\n          onChange={(e) => setConditions(e.target.value)}\n          placeholder='Do you have any existing medical conditions?'\n        />\n\n        <label className='label'>Expectations:</label>\n        <textarea \n          className='inputBox'\n          value={expectations}\n          onChange={(e) => setExpectations(e.target.value)}\n          placeholder='What do you hope to get out of this consultation?'\n        />\n      </div>\n      \n      <div className='button-centered-container'>\n        <CustomButton\n          title='SUBMIT'\n          onPress={handleSubmit}\n          style='submit-button-input'\n        />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InputPage;",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":66,"column":11,"nodeType":"132","messageId":"133","endLine":66,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":23,"column":6,"nodeType":"136","endLine":23,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":29,"column":9,"nodeType":"140","messageId":"141","endLine":29,"endColumn":23},{"ruleId":"128","replacedBy":"142"},{"ruleId":"134","severity":1,"message":"135","line":23,"column":6,"nodeType":"136","endLine":23,"endColumn":8,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"139","line":29,"column":9,"nodeType":"140","messageId":"141","endLine":29,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":66,"column":11,"nodeType":"132","messageId":"133","endLine":66,"endColumn":38},{"ruleId":"128","replacedBy":"144"},{"ruleId":"138","severity":1,"message":"145","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":66,"column":11,"nodeType":"132","messageId":"133","endLine":66,"endColumn":38},"no-new-object",["146"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendMessage'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-unused-vars","'sendBotMessage' is assigned a value but never used.","Identifier","unusedVar",["146"],["148"],["146"],"'useEffect' is defined but never used.","no-object-constructor",{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},"Update the dependencies array to be: [sendMessage]",{"range":"152","text":"153"},{"range":"154","text":"153"},[732,734],"[sendMessage]",[708,710]]